{"version":3,"sources":["info.js","main.js","App.js","serviceWorker.js","index.js"],"names":["Info","useState","waxPrice","setwaxPrice","hwbPrice","sethwbPrice","wax_price","useEffect","getWax","a","fetch","all_tokens","json","console","log","wax","usd","status","undefined","getHWB","last_price","Math","round","sendWax","then","responseJSON","sendHWB","className","data-header","href","to","src","width","height","alt","data-navbar","data-nav-link","target","aria-label","data-nav-toggler","Main","query","window","runScript","id","type","placeholder","style","marginBottom","minWidth","rel","App","exact","path","element","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b0a07871.chunk.js","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\r\nimport './App.css';\r\nimport './assets/css/style.css';\r\nimport { HashRouter, Link, Routes, Route } from 'react-router-dom';\r\n\r\nfunction Info({ }) {\r\n\r\n    const [waxPrice,setwaxPrice] = useState('')\r\n    const [hwbPrice,sethwbPrice] = useState('')\r\n    var wax_price = ''\r\n    let wax_val = ''\r\n    var hwb_price = ''\r\n\r\n    useEffect (() =>{\r\n\r\n        async function getWax() {\r\n          try{\r\n            let all_tokens = await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=wax&vs_currencies=usd\");\r\n           \r\n            all_tokens = await all_tokens.json();\r\n            wax_price = all_tokens\r\n            console.log(wax_price.wax.usd)\r\n            console.log(all_tokens.status === 200)\r\n            if (all_tokens != undefined) {\r\n              setwaxPrice(wax_price.wax.usd)\r\n            }\r\n            return all_tokens;\r\n           \r\n          }catch(e) {\r\n            console.log('Error: ', e)\r\n            return ('Error:' + e)\r\n          }\r\n        }\r\n        async function sendWax() {\r\n          try{\r\n            if (wax_price == ''){\r\n              return getWax()\r\n            }else{\r\n              return wax_price;\r\n            }\r\n          \r\n          }catch(e) {\r\n            console.log('Error: ', e)\r\n            return ('Error:' + e)\r\n          }\r\n        }\r\n        async function getHWB() {\r\n          try{\r\n            let all_tokens = await fetch(\"https://wax.alcor.exchange/api/markets/636\");\r\n            all_tokens = await all_tokens.json();\r\n            wax_price = all_tokens\r\n            console.log(wax_price.last_price)\r\n            if (all_tokens != undefined) {\r\n              sethwbPrice(Math.round(wax_price.last_price* 100) / 100)\r\n            }\r\n            return all_tokens.last_price;\r\n          }catch(e) {\r\n            console.log('Error: ', e)\r\n            return ('Error:' + e)\r\n          }\r\n        }\r\n        async function sendHWB() {\r\n          try{\r\n            if (hwb_price == ''){\r\n              return getHWB()\r\n            }else{\r\n              return hwb_price;\r\n            }\r\n          \r\n          }catch(e) {\r\n            console.log('Error: ', e)\r\n            return ('Error:' + e)\r\n          }\r\n        }\r\n  \r\n        let wax = sendWax().then((responseJSON) => {\r\n      // do stuff with responseJSON here...\r\n      wax_val = responseJSON\r\n    });\r\n  \r\n  let hwb_val = ''\r\n  let hwb = sendHWB().then((responseJSON) => {\r\n      // do stuff with responseJSON here...\r\n      hwb_val = responseJSON\r\n    });\r\n  \r\n    }, [])\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n        <header className=\"header\" data-header>\r\n  \r\n  <div className=\"container\">\r\n\r\n    <a href=\"/#\" className=\"logo\">\r\n    <Link to=\"/#\"><img src=\"./favicon.png\" width=\"32\" height=\"32\" alt=\"Cryptex logo\"></img></Link>\r\n      \r\n\r\n    </a>\r\n\r\n    <nav className=\"navbar\" data-navbar>\r\n      <ul className=\"navbar-list\">\r\n\r\n        <li className=\"navbar-item\">\r\n            <Link to=\"/#\" className=\"navbar-link\" data-nav-link>Home</Link>\r\n        </li>\r\n\r\n        <li className=\"navbar-item\">\r\n          <a href=\"https://play.hackersworld.io/account\" target=\"_blank\" className=\"navbar-link\" data-nav-link>Play</a>\r\n        </li>\r\n\r\n        <li className=\"navbar-item\">\r\n          <a href=\"https://hackersworld.io/\" target=\"_blank\" className=\"navbar-link\" data-nav-link>Main Site</a>\r\n        </li>\r\n\r\n        <li className=\"navbar-item\">\r\n          <a href=\"https://whitepaper.hackersworld.io/welcome-to-hackersworld/how-to-play\" target=\"_blank\" className=\"navbar-link\" data-nav-link>Whitepaper</a>\r\n        </li>\r\n\r\n        <li className=\"navbar-item\">\r\n            <Link to=\"/info\" className=\"navbar-link\" data-nav-link>Infographics</Link>\r\n        </li>\r\n\r\n        <li className=\"navbar-item\">\r\n          <a href=\"https://wax.alcor.exchange/trade/hwb-hackerstoken_wax-eosio.token\" target=\"_blank\" className=\"navbar-link\" data-nav-link>HWB/WAX: {hwbPrice}</a>\r\n        </li>\r\n\r\n        <li className=\"navbar-item\">\r\n          <a href=\"https://www.coingecko.com/en/coins/wax\" className=\"navbar-link\" target=\"_blank\" data-nav-link>WAX/USDT: {waxPrice}</a>\r\n        </li>\r\n\r\n        \r\n\r\n        {/* <li className=\"navbar-item\">\r\n          <a href=\"# \" className=\"navbar-link\" data-nav-link>Buy Wax</a>\r\n        </li> */}\r\n\r\n\r\n      </ul>\r\n    </nav>\r\n\r\n    <button className=\"nav-toggle-btn\" aria-label=\"Toggle menu\" data-nav-toggler>\r\n      <span className=\"line line-1\"></span>\r\n      <span className=\"line line-2\"></span>\r\n      <span className=\"line line-3\"></span>\r\n    </button>\r\n\r\n    <a href=\"# \" className=\"btn btn-outline\">Donations :) --> 4r1fy.wam</a>\r\n\r\n  </div>\r\n</header>\r\n<div className='img_container'>\r\n    <h1>Tools Information</h1>\r\n    <img src=\"./tools_info.png\" width=\"32\" height=\"32\" alt=\"tools_info\"></img>\r\n    <h1>Mechanics Flow Chart</h1>\r\n    <img src=\"./flow_chart.png\" width=\"32\" height=\"32\" alt=\"tools_info\"></img>\r\n</div>\r\n       \r\n<footer className=\"footer\">\r\n            <p>With &hearts; from Mekii</p>\r\n    </footer>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Info;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport './assets/css/style.css';\r\nimport { HashRouter, Link, Routes, Route } from 'react-router-dom';\r\nfunction Main({ query }) {\r\n\r\n\r\n  \r\n\r\n    var initial_market_data = []\r\n    function insertDecimal(num) {\r\n      return (num / 100000000).toFixed(0);\r\n   }\r\n  \r\n      const [waxPrice,setwaxPrice] = useState('')\r\n      const [hwbPrice,sethwbPrice] = useState('')\r\n      var wax_price = ''\r\n      let wax_val = ''\r\n      var hwb_price = ''\r\n  \r\n  \r\n      useEffect (() =>{\r\n        if(window && window.runScript){\r\n            window.runScript();\r\n          }\r\n        async function getWax() {\r\n          try{\r\n            let all_tokens = await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=wax&vs_currencies=usd\");\r\n           \r\n            all_tokens = await all_tokens.json();\r\n            wax_price = all_tokens\r\n            console.log(wax_price.wax.usd)\r\n            console.log(all_tokens.status === 200)\r\n            if (all_tokens != undefined) {\r\n              setwaxPrice(wax_price.wax.usd)\r\n            }\r\n            return all_tokens;\r\n           \r\n          }catch(e) {\r\n            console.log('Error: ', e)\r\n            return ('Error:' + e)\r\n          }\r\n        }\r\n        async function sendWax() {\r\n          try{\r\n            if (wax_price == ''){\r\n              return getWax()\r\n            }else{\r\n              return wax_price;\r\n            }\r\n          \r\n          }catch(e) {\r\n            console.log('Error: ', e)\r\n            return ('Error:' + e)\r\n          }\r\n        }\r\n        async function getHWB() {\r\n          try{\r\n            let all_tokens = await fetch(\"https://wax.alcor.exchange/api/markets/636\");\r\n            all_tokens = await all_tokens.json();\r\n            wax_price = all_tokens\r\n            console.log(wax_price.last_price)\r\n            if (all_tokens != undefined) {\r\n              sethwbPrice(Math.round(wax_price.last_price* 100) / 100)\r\n            }\r\n            return all_tokens.last_price;\r\n          }catch(e) {\r\n            console.log('Error: ', e)\r\n            return ('Error:' + e)\r\n          }\r\n        }\r\n        async function sendHWB() {\r\n          try{\r\n            if (hwb_price == ''){\r\n              return getHWB()\r\n            }else{\r\n              return hwb_price;\r\n            }\r\n          \r\n          }catch(e) {\r\n            console.log('Error: ', e)\r\n            return ('Error:' + e)\r\n          }\r\n        }\r\n  \r\n        let wax = sendWax().then((responseJSON) => {\r\n      // do stuff with responseJSON here...\r\n      wax_val = responseJSON\r\n    });\r\n  \r\n  let hwb_val = ''\r\n  let hwb = sendHWB().then((responseJSON) => {\r\n      // do stuff with responseJSON here...\r\n      hwb_val = responseJSON\r\n    });\r\n  \r\n    }, [])\r\n  \r\n    //     async function getWax() {\r\n    //       try {\r\n    //           const host = process.env.REACT_APP_HOST || \"http://localhost:5000\"\r\n    //           const response = await fetch(\r\n    //               `${host}/api/wax_price?q=${encodeURIComponent(query)}`\r\n    //           )\r\n    //           if (response.status === 200) {\r\n    //               //setResponse(\"a Success!!!\")\r\n    //               const data = await response.json();\r\n    //               setwaxPrice(data.info.wax.usd)\r\n    //           }\r\n    //       } catch (err) {\r\n  \r\n    //       }\r\n    //   }\r\n  \r\n    //   async function getHWB() {\r\n    //     try {\r\n    //         const host = process.env.REACT_APP_HOST || \"http://localhost:5000\"\r\n    //         const response = await fetch(\r\n    //             `${host}/api/hwb_price?q=${encodeURIComponent(query)}`\r\n    //         )\r\n    //         if (response.status === 200) {\r\n    //             //setResponse(\"a Success!!!\")\r\n    //             const data = await response.json();\r\n    //             sethwbPrice(Math.round(data.info* 100) / 100)\r\n    //         }\r\n    //     } catch (err) {\r\n  \r\n    //     }\r\n    // }\r\n  \r\n  \r\n    // async function getStakedTools() {\r\n    //   try {\r\n    //       const host = process.env.REACT_APP_HOST || \"http://localhost:5000\"\r\n    //       const response = await fetch(\r\n    //           `${host}/api/staked?q=${encodeURIComponent(query)}`\r\n    //       )\r\n    //       if (response.status === 200) {\r\n    //           //setResponse(\"a Success!!!\")\r\n    //           const data = await response.json();\r\n    //           console.log(data.info.rows)\r\n    //       }\r\n    //   } catch (err) {\r\n    \r\n    //   }\r\n    // }\r\n          //getStakedTools()\r\n        \r\n  \r\n    console.log(waxPrice)\r\n  \r\n  \r\n    return (\r\n      \r\n      <div className=\"App\">\r\n\r\n  <header className=\"header\" data-header>\r\n  \r\n      <div className=\"container\">\r\n  \r\n        <a href=\"/#\" className=\"logo\">\r\n        <Link to=\"/#\"><img src=\"./favicon.png\" width=\"32\" height=\"32\" alt=\"Cryptex logo\"></img></Link>\r\n          \r\n  \r\n        </a>\r\n  \r\n        <nav className=\"navbar\" data-navbar>\r\n          <ul className=\"navbar-list\">\r\n  \r\n\r\n            <li className=\"navbar-item\">\r\n              <Link to=\"/#\" className=\"navbar-link\" data-nav-link>Home</Link>\r\n            </li>\r\n\r\n            <li className=\"navbar-item\">\r\n              <a href=\"https://play.hackersworld.io/account\" target=\"_blank\" className=\"navbar-link\" data-nav-link>Play</a>\r\n            </li>\r\n  \r\n            <li className=\"navbar-item\">\r\n              <a href=\"https://hackersworld.io/\" target=\"_blank\" className=\"navbar-link\" data-nav-link>Main Site</a>\r\n            </li>\r\n  \r\n            <li className=\"navbar-item\">\r\n              <a href=\"https://whitepaper.hackersworld.io/welcome-to-hackersworld/how-to-play\" target=\"_blank\" className=\"navbar-link\" data-nav-link>Whitepaper</a>\r\n            </li>\r\n  \r\n            <li className=\"navbar-item\">\r\n              <Link to=\"/info\" className=\"navbar-link\" data-nav-link>Infographics</Link>\r\n            </li>\r\n  \r\n            <li className=\"navbar-item\">\r\n              <a href=\"https://wax.alcor.exchange/trade/hwb-hackerstoken_wax-eosio.token\" target=\"_blank\" className=\"navbar-link\" data-nav-link>HWB/WAX: {hwbPrice}</a>\r\n            </li>\r\n  \r\n            <li className=\"navbar-item\">\r\n              <a href=\"https://www.coingecko.com/en/coins/wax\" className=\"navbar-link\" target=\"_blank\" data-nav-link>WAX/USDT: {waxPrice}</a>\r\n            </li>\r\n  \r\n            \r\n  \r\n            {/* <li className=\"navbar-item\">\r\n              <a href=\"# \" className=\"navbar-link\" data-nav-link>Buy Wax</a>\r\n            </li> */}\r\n  \r\n  \r\n          </ul>\r\n        </nav>\r\n  \r\n        <button className=\"nav-toggle-btn\" aria-label=\"Toggle menu\" data-nav-toggler>\r\n          <span className=\"line line-1\"></span>\r\n          <span className=\"line line-2\"></span>\r\n          <span className=\"line line-3\"></span>\r\n        </button>\r\n  \r\n        <a href=\"# \" className=\"btn btn-outline\">Donations :) --> 4r1fy.wam</a>\r\n  \r\n      </div>\r\n    </header>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n    <main>\r\n    <article>\r\n      <div className='banner_container'>\r\n            <img src='hackers_banner.png'></img>\r\n      </div>\r\n      <div className=\"select_container\">\r\n        <div className=\"demo-flex-spacer\"></div>\r\n  \r\n        <div className=\"webflow-style-input\">\r\n          <input className=\"\" id='wax_name' type=\"email\" placeholder=\"Enter your Wax Wallet\"></input>\r\n          <button id ='submit_btn' type=\"submit\"><i className=\"fa fa-chevron-circle-right\"></i></button>\r\n        </div>\r\n        <button className='reset_btn' id='reset_btn'>\r\n          RESET\r\n        </button>\r\n          \r\n  \r\n      </div>\r\n      <div className='list_container' >\r\n            <table>\r\n              <thead id='listContainerHead'>\r\n  \r\n              </thead>\r\n              <tbody id='listContainer'>\r\n  \r\n              </tbody>\r\n            \r\n            </table>\r\n            <div id='listContainerDiv' className='listContainerDiv'> </div>\r\n            <table style={{marginBottom:'50px'}}>\r\n              {/* <thead id='listContainerHead'>\r\n  \r\n              </thead> */}\r\n              <tbody >\r\n              <tr>Top Donors:\r\n                <td style={{minWidth:'200px'}}>1 : nfkb4.wam - 50 Wax</td>\r\n              </tr>\r\n              </tbody>\r\n            \r\n            </table>\r\n      </div>\r\n    </article>\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n    </main>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    <footer className=\"footer\">\r\n            <p>With &hearts; from Mekii</p>\r\n    </footer>\r\n  \r\n  \r\n  \r\n  \r\n      </div>\r\n      \r\n    );\r\n  }\r\n\r\n  export default Main;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport './assets/css/style.css';\r\nimport { HashRouter, Link, Routes, Route } from 'react-router-dom';\r\nimport Info from './info.js';\r\nimport Main from './main.js';\r\n\r\nfunction App({ query }) {\r\n\r\n\r\n  \r\n\r\n  var initial_market_data = []\r\n  function insertDecimal(num) {\r\n    return (num / 100000000).toFixed(0);\r\n }\r\n\r\n    const [waxPrice,setwaxPrice] = useState('')\r\n    const [hwbPrice,sethwbPrice] = useState('')\r\n    var wax_price = ''\r\n    let wax_val = ''\r\n    var hwb_price = ''\r\n\r\n\r\n    useEffect (() =>{\r\n      if(window && window.runScript){\r\n        window.runScript();\r\n      }\r\n\r\n  }, [])\r\n\r\n  //     async function getWax() {\r\n  //       try {\r\n  //           const host = process.env.REACT_APP_HOST || \"http://localhost:5000\"\r\n  //           const response = await fetch(\r\n  //               `${host}/api/wax_price?q=${encodeURIComponent(query)}`\r\n  //           )\r\n  //           if (response.status === 200) {\r\n  //               //setResponse(\"a Success!!!\")\r\n  //               const data = await response.json();\r\n  //               setwaxPrice(data.info.wax.usd)\r\n  //           }\r\n  //       } catch (err) {\r\n\r\n  //       }\r\n  //   }\r\n\r\n  //   async function getHWB() {\r\n  //     try {\r\n  //         const host = process.env.REACT_APP_HOST || \"http://localhost:5000\"\r\n  //         const response = await fetch(\r\n  //             `${host}/api/hwb_price?q=${encodeURIComponent(query)}`\r\n  //         )\r\n  //         if (response.status === 200) {\r\n  //             //setResponse(\"a Success!!!\")\r\n  //             const data = await response.json();\r\n  //             sethwbPrice(Math.round(data.info* 100) / 100)\r\n  //         }\r\n  //     } catch (err) {\r\n\r\n  //     }\r\n  // }\r\n\r\n\r\n  // async function getStakedTools() {\r\n  //   try {\r\n  //       const host = process.env.REACT_APP_HOST || \"http://localhost:5000\"\r\n  //       const response = await fetch(\r\n  //           `${host}/api/staked?q=${encodeURIComponent(query)}`\r\n  //       )\r\n  //       if (response.status === 200) {\r\n  //           //setResponse(\"a Success!!!\")\r\n  //           const data = await response.json();\r\n  //           console.log(data.info.rows)\r\n  //       }\r\n  //   } catch (err) {\r\n  \r\n  //   }\r\n  // }\r\n        //getStakedTools()\r\n      \r\n\r\n  console.log(waxPrice)\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<Main/>} />\r\n        <Route path=\"/info\" element={<Info/>} />\r\n        {/* <Route path=\"/menu2/:id\" component={Menu2} />\r\n        <Route path=\"/menu3/:id1/:id2\" component={Menu3} /> */}\r\n      </Routes>\r\n\r\n    </div>\r\n    \r\n  );\r\n}\r\n// let Infographics = () => {\r\n//   return (\r\n//     <div className='info'>\r\n//       <header className=\"header\" data-header>\r\n\r\n// <div className=\"container\">\r\n\r\n//   <a href=\"/\" className=\"logo\">\r\n//     <img src=\"./favicon.png\" width=\"32\" height=\"32\" alt=\"Cryptex logo\"></img>\r\n\r\n//   </a>\r\n\r\n//   <nav className=\"navbar\" data-navbar>\r\n//     <ul className=\"navbar-list\">\r\n\r\n//       <li className=\"navbar-item\">\r\n//         <a href=\"https://play.hackersworld.io/account\" target=\"_blank\" className=\"navbar-link\" data-nav-link>Play</a>\r\n//       </li>\r\n\r\n//       <li className=\"navbar-item\">\r\n//         <a href=\"https://hackersworld.io/\" target=\"_blank\" className=\"navbar-link\" data-nav-link>Main Site</a>\r\n//       </li>\r\n\r\n//       <li className=\"navbar-item\">\r\n//         <a href=\"https://whitepaper.hackersworld.io/welcome-to-hackersworld/how-to-play\" target=\"_blank\" className=\"navbar-link\" data-nav-link>Whitepaper</a>\r\n//       </li>\r\n\r\n//       <li className=\"navbar-item\">\r\n//         <a target=\"_blank\" className=\"navbar-link\" data-nav-link><Link to=\"/info\">Infographics</Link></a>\r\n//       </li>\r\n\r\n//       <li className=\"navbar-item\">\r\n//         <a href=\"https://wax.alcor.exchange/trade/hwb-hackerstoken_wax-eosio.token\" target=\"_blank\" className=\"navbar-link\" data-nav-link>HWB/WAX: </a>\r\n//       </li>\r\n\r\n//       <li className=\"navbar-item\">\r\n//         <a href=\"https://www.coingecko.com/en/coins/wax\" className=\"navbar-link\" target=\"_blank\" data-nav-link>WAX/USDT: </a>\r\n//       </li>\r\n\r\n      \r\n\r\n//       {/* <li className=\"navbar-item\">\r\n//         <a href=\"# \" className=\"navbar-link\" data-nav-link>Buy Wax</a>\r\n//       </li> */}\r\n\r\n\r\n//     </ul>\r\n//   </nav>\r\n\r\n//   <button className=\"nav-toggle-btn\" aria-label=\"Toggle menu\" data-nav-toggler>\r\n//     <span className=\"line line-1\"></span>\r\n//     <span className=\"line line-2\"></span>\r\n//     <span className=\"line line-3\"></span>\r\n//   </button>\r\n\r\n//   {/* <a href=\"# \" className=\"btn btn-outline\">Donations :) --> 4r1fy.wam</a> */}\r\n\r\n// </div>\r\n// </header>\r\n\r\n\r\n\r\n\r\n\r\n// <main>\r\n// <article>\r\n// <div className='banner_container'>\r\n//       <img src='hackers_banner.png'></img>\r\n// </div>\r\n// <div className=\"select_container\">\r\n//   <div className=\"demo-flex-spacer\"></div>\r\n\r\n//   <div className=\"webflow-style-input\">\r\n//     <input className=\"\" id='wax_name' type=\"email\" placeholder=\"Enter your Wax Wallet\"></input>\r\n//     <button id ='submit_btn' type=\"submit\"><i className=\"fa fa-chevron-circle-right\"></i></button>\r\n//   </div>\r\n//   <button className='reset_btn' id='reset_btn'>\r\n//     RESET\r\n//   </button>\r\n    \r\n\r\n// </div>\r\n// <div className='list_container' >\r\n//       <table>\r\n//         <thead id='listContainerHead'>\r\n\r\n//         </thead>\r\n//         <tbody id='listContainer'>\r\n\r\n//         </tbody>\r\n      \r\n//       </table>\r\n//       <div id='listContainerDiv' className='listContainerDiv'> </div>\r\n//       <table>\r\n//         {/* <thead id='listContainerHead'>\r\n\r\n//         </thead> */}\r\n//         <tbody >\r\n//         <tr>Top Donors:\r\n//           <td style={{minWidth:'200px'}}>1 : nfkb4.wam - 50 Wax</td>\r\n//         </tr>\r\n//         </tbody>\r\n      \r\n//       </table>\r\n// </div>\r\n// </article>\r\n// <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n// </main>\r\n\r\n\r\n\r\n\r\n\r\n\r\n// <footer className=\"footer\">\r\n//       <p>With &hearts; from Mekii</p>\r\n// </footer>\r\n//     </div>\r\n//   );\r\n// };\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <HashRouter >\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}